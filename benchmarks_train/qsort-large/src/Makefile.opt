#
# TARGET
#
TARGET = a.out

#
# VARIABLES
#

# Compiler
CC = clang

# LLVM opt
OPT = opt

# LLVM linker
LINK = llvm-link

# LLVM compiler
LLC = llc

# Compile-time flags
CFLAGS += -Xclang -disable-O0-optnone -w -emit-llvm

# Includes
INCLUDES =

# Library paths
LFLAGS +=

# Linker flags
LIBS = -lm

# Source files
SRCS = $(wildcard *.c)

# LLVM files
BCS = $(SRCS:.c=.bc)

# Object file
OBJ = program.o

#
# BUILD
#

.PHONY: depend clean

all:    $(TARGET)

$(TARGET): ${OBJ}
	$(CC) -o $(TARGET) $(OBJ) $(LFLAGS) $(LIBS)

%.bc: %.c
	$(CC) $(CFLAGS) $(INCLUDES) -c $< -o $@

${OBJ}: ${BCS}
	$(LINK) *.bc -o program.bc
	$(OPT) $(PASSES) program.bc -o program_o.bc
	$(LLC) -filetype=obj program_o.bc -o ${OBJ}

#
# CLEAN
#
clean:
	$(RM) *.o *.bc ~

cleanup:
	$(RM) *.o *.bc *~ $(TARGET)

#
# DEPEND
#
depend: $(SRCS)
	makedepend $(INCLUDES) $^

